<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="roundRectShape1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gridViewCommandColumn1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAINSURBVDhPhVJLaxRBEJ41Poh6MoJssuBrdrqnHzO7M7OZ
        iYlZN7ssCIMHYQ6aU1BvHrx4icIS0IsIXjx4yEUPvsF4EHxA0JMn/5Nf9fawmXXBD5ri66r6qrqqnVnQ
        jD3gnC9Y+n/EcXwk8LwNSx3N+QsI1LMsm8+ycElrzXBdG3tnoHCcOcXYS5xN4rDPkyRhaZo2Q8F+RVrH
        JvBfTERJhCqnSp0ZDAaLvV7vbKjUm5aUHRtSwWg0OkQdWjpGURRzZTLZbrd72LoqoLjhcHgqz/PjjuT8
        Os6e4vxzJ4pyJLmo/AHPeKVdtwH7jPzo7n2ZbMVPH+ygRopUeS1tB9jCbsjYOYh+tH6DQoijy1G0QXEU
        j6vxDEhpLUkutJR6SxtBtXfYynkIPIbYffCnsF9CKX9joLuBlHs0A5NMuBxFde37+xjYJeJCCFd53mvY
        kxB5RINcX0/9cjaI3YboDZNMiKS8GDaby5YaIPGJZOzK9GCJu657THvez6zRmMzAWgMMbotalp73ZzrZ
        hlCBEeISS6uA+nda4cpK0p6VTJC+fwvbyS2tIhRiqy3lj6ilb0OoMZ1MQIfXMIc7lk5Qvnl1tSPbWu8g
        aB/t3g2C4AT57Zbu4e4rNqJNUglaDe2XPglZ4vQUVLuJ8wlPu4rzTQmx2e/3F8xPPIAa/Qe6tD+sMliq
        CpGHcb1u/OO4bP4vfyaL6N+a/bkAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btn_print.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>